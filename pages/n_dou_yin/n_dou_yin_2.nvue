<template>
  <view class="currentPage-swiper">
    <!--swiper实现整屏划动播放视频-->
    {{ paginatedData.length }}
    <swiper class="content-wrapper" :render-whole="true" :circular="false" vertical :duration="200" @change="swiperChanged">

      <swiper-item class="content-wrapper swiper-item" v-for="(item,index) in paginatedData" :key="item.id">
        <view class="content-wrapper video-box">

          <video :id="'video'+index" class="content-wrapper" v-if="cachePlay?item.show:index===showVideoIndex" :src="item.playurl"
                 :autoplay="!cachePlay" :controls="true" :custom-cache="false" :loop="false"
                 :enable-play-gesture="true" :enable-progress-gesture="true" play-btn-position="center"
                 :show-center-play-btn="true"
                 :poster="item.picurl"
          >

          </video>
          <!--          <view class="icon-play" @change="playVideo">
                      <uni-icons type="videocam-filled" :size="40" color="#fff"/>
                    </view>-->

          <!--模拟视频封面-->
          <!--          <template v-if="index!==showVideoIndex">
                      <image class="content-wrapper picurl" v-if="index===showVideoIndex-1" :src="paginatedData[index].picurl" mode="widthFix"></image>
                      <image class="content-wrapper picurl" v-if="index===showVideoIndex+1" :src="paginatedData[index].picurl" mode="widthFix"></image>
                    </template>-->

          <!-- 文本标题 -->
          <view class="video-text">
            <text class="tips">{{ index + 1 }} / {{ paginatedData.length }} {{ item.title }}</text>
          </view>
        </view>

      </swiper-item>


    </swiper>

    <view class="fixed-right">
      <uni-grid :column="4" :highlight="true">
        <uni-grid-item v-for="(item, index) in list" :index="index" :key="index">
          <view class="grid-item-box" @click="changeGrid(index)">
            <uni-icons :type="item.type" :size="34" color="#fff"/>
            <text class="fixed-right-text">{{ item.text }}</text>
          </view>
        </uni-grid-item>
      </uni-grid>
    </view>

    <uni-popup ref="popup" border-radius="10px 10px 0 0">
      <view class="popup-container">
        <text>底部弹出 Popup 自定义圆角</text>
      </view>
    </uni-popup>
  </view>
</template>

<script>

import {uuid} from "@/utils/tools";

let videoContexts = []
export default {
  data() {
    return {

      // paginatedData: [], // 源数据
      showVideoIndex: 0, //控制video是否渲染

      currentPage: 1, // 视频分页
      pageSize: 5,


      list: [
        {
          text: '播放',
          badge: '0',
          type: "heart-filled"
        }, {
          text: '暂停',
          badge: '0',
          type: "heart-filled"
        }, {
          text: '停止',
          badge: '0',
          type: "heart-filled"
        }, {
          text: 'Grid 1',
          badge: '0',
          type: "heart-filled"
        },
        {
          text: 'Grid 2',
          badge: '1',
          type: "hand-up-filled"
        },
        {
          text: 'Grid 3',
          badge: '99',
          type: "chat-filled"
        },
        {
          text: 'Grid 4',
          badge: '2',
          type: "redo-filled"
        },

      ],

      cachePlay: true,

      dataList: [] // 假定这里是从外部获取的数据列表

    }
  },

  onLoad() {
    this.getVideoList()
  },
  onReady: function (res) {
    if (!this.cachePlay) return

    this.setVideoContext()

    this.videoContext.play()

  },
  computed: {
    videoContext() {
      return videoContexts[this.showVideoIndex]
    },

    paginatedData() {
      const start = (this.currentPage - 2) * this.pageSize;
      const end = start + this.pageSize;
      return this.dataList.slice(start, end);
    }
  },


  methods: {


    /* 获取视频数据 */
    getVideoList() {
      let resData = {
        "code": 200,
        "message": "成功!",
        "result": {
          "total": 1825,
          "list": [
            {
              "id": 4,
              "title": "甜茶❤恭喜路人哥大帝 嗨唱视频",
              "alias": "甜茶♥",
              "picuser": "https://vi3.6rooms.com/live/2021/12/31/00/1003v1640883024264589121.jpg",
              "picurl": "https://vi3.6rooms.com/live/2020/06/05/16/1032v1591346452727634477_l.jpg",
              "playurl": "https://minivideo.xiu123.cn/original/ca685b093649466a98cddfcdcb63bad6/6ccf6d3-17283a3bedb.mp4",
              "sec": "140",
              "show": false
            },
            {
              "id": 5,
              "title": "手机最后的电量/汗/",
              "alias": "An然🎀",
              "picuser": "https://vi3.6rooms.com/live/2021/12/20/00/1003v1639930574715388721.jpg",
              "picurl": "https://vi1.6rooms.com/live/2021/12/29/12/1032v1640751242185686139_l.jpg",
              "playurl": "https://minivideo.xiu123.cn/original/0badbe7c06004c17be8738cd25424665/59737f9b-17e0464f1cb.mp4",
              "sec": "10"
            },
            {
              "id": 1,
              "title": "漂靓7点王牌 嗨唱视频",
              "alias": "漂靓求守护",
              "picuser": "https://vi3.6rooms.com/live/2021/08/06/18/1003v1628244406230533106.jpg",
              "picurl": "https://vi1.6rooms.com/live/2021/03/08/20/1032v1615206609609145050_l.jpg",
              "playurl": "https://minivideo.xiu123.cn/original/fc97fb8c14394f19846af8d65144fb1d/46c4c48f-17811d0e750.mp4",
              "sec": "200"
            },
            {
              "id": 2,
              "title": "四川小雅兮很哇塞 嗨唱视频",
              "alias": "四川小雅兮1月3号见",
              "picuser": "https://vi2.6rooms.com/live/2020/06/18/19/1003v1592478005242488017.jpg",
              "picurl": "https://vi1.6rooms.com/live/2021/01/22/00/1032v1611247831393585704_l.jpg",
              "playurl": "https://minivideo.xiu123.cn/original/018195aa235b4686aaf17d473f1c83ac/5d2b1853-17725da8da5.mp4",
              "sec": "200"
            },
            {
              "id": 3,
              "title": "爱唱歌的小小-期待 嗨唱视频",
              "alias": "小小凡👑元旦快乐",
              "picuser": "https://vi0.6rooms.com/live/2021/12/08/11/1003v1638932490046079903.jpg",
              "picurl": "https://vi3.6rooms.com/live/2020/11/04/18/1032v1604487141622611810_l.jpg",
              "playurl": "https://minivideo.xiu123.cn/original/b46e5758a7e24869adf886a1347e4d2c/450e7662-17592e2aa0a.mp4",
              "sec": "199"
            },

            /* {
               "id": 6,
               "title": "遇见你不容易，希望你也是这么想",
               "alias": "小绵羊坚持",
               "picuser": "https://vi3.6rooms.com/live/2021/12/28/22/1003v1640700228360231959.jpg",
               "picurl": "https://vi3.6rooms.com/live/2021/12/26/10/1032v1640484423673278677_l.jpg",
               "playurl": "https://minivideo.xiu123.cn/original/76a35df3ec354480b6de9766ee61ca7a/42db6b3a-17df47dbf6a.mp4",
               "sec": "12"
             },
             {
               "id": 8,
               "title": "迟来的圣诞🎄小视频",
               "alias": "麻花贺微笑88天神帝",
               "picuser": "https://vi2.6rooms.com/live/2021/08/18/01/1003v1629223016658172591.jpg",
               "picurl": "https://vi2.6rooms.com/live/2021/12/26/13/1032v1640497690253021267_l.jpg",
               "playurl": "https://minivideo.xiu123.cn/original/97f97f2f1bca490ebea39e9ed82a3625/30835bf0-17df54819a7.mp4",
               "sec": "9"
             },
             {
               "id": 7,
               "title": "开心活着吧",
               "alias": "热舞倾城静静新年快乐",
               "picuser": "https://vi0.6rooms.com/live/2021/08/15/20/1003v1629031960152012725.jpg",
               "picurl": "https://vi2.6rooms.com/live/2021/12/26/11/1032v1640487774337565965_l.jpg",
               "playurl": "https://minivideo.xiu123.cn/original/fb3beffa2b214d149528e37adfc842da/4ec52e37-17df4b0dffb.mp4",
               "sec": "12"
             },
             {
               "id": 9,
               "title": "/害羞",
               "alias": "新人月亮-求升级",
               "picuser": "https://vi3.6rooms.com/live/2021/12/23/20/1003v1640264257286899827.jpg",
               "picurl": "https://vi0.6rooms.com/live/2021/12/26/15/1032v1640502505571628175_l.jpg",
               "playurl": "https://minivideo.xiu123.cn/original/3cdca2f323ea429096931952ccbc1a98/158191fe-17df5919a9d.mp4",
               "sec": "11"
             },
             {
               "id": 10,
               "title": "🐸◡̈ᑋᵉᑊᑊᵒ ᵕ̈",
               "alias": "是你的倔驴呀～",
               "picuser": "https://vi3.6rooms.com/live/2021/12/14/08/1003v1639440365425021950.jpg",
               "picurl": "https://vi3.6rooms.com/live/2021/12/27/01/1032v1640541123813198197_l.jpg",
               "playurl": "https://minivideo.xiu123.cn/original/429c461b4fd841e59317b5805fc7bfd1/4ce4078a-17df7dee77b.mp4",
               "sec": "6"
             }*/
          ]
        }
      }
      let res = JSON.parse(JSON.stringify(resData))
      res.result.list.forEach(item => item.id = uuid())
      if (res.code === 200) {
        let len = this.paginatedData.length

        this.dataList =  res.result.list;

        if (len === 0) {
          this.setVideoShow(0)

        }
        this.currentPage++

      }

      return
      uni.request({
        url: 'https://api.apiopen.top/api/getMiniVideo?currentPage=' + this.currentPage + '&pageSize=' + this.pageSize, // 请求数据接口
        data: {},
        success: (res) => {
          if (res.data.code === 200) {
            this.paginatedData = res.data.result.list
            this.currentPage++
          }
        }
      })


    },
    changePage() {
      // 翻页逻辑，确保页码的有效性
      const newPage = this.currentPage + 1;
      if (newPage > 0 && (newPage - 1) * this.pageSize < this.dataList.length) {
        this.currentPage = newPage;
      }
    },
    updateItem(current) {
      // 计算在dataList中的实际索引
      const actualIndex = (this.currentPage - 1) * this.pageSize + current;
      // 确保索引有效
      if (actualIndex >= 0 && actualIndex < this.dataList.length) {
        this.$set(this.dataList, actualIndex, {...this.dataList[actualIndex], show: true});
      }

    },
    setVideoContext() {
      if (!this.cachePlay) return
      let videoId = 'video' + this.showVideoIndex
      let videoContext = uni.createVideoContext(videoId)
      if (videoContexts.length === this.showVideoIndex) {
        videoContexts.push(videoContext)
      }
      console.log('videoContexts', videoContexts.length)
    },
    setVideoShow(current) {
      if (!this.cachePlay) return

      if (current === 0) {
        this.updateItem(current)
        this.updateItem(current + 1)
        this.updateItem(current + 2)

      } else {
        let heideIndex = this.paginatedData.findIndex(item => !item.show);
        if (heideIndex !== -1) {
          console.log('setShow-ok')
          this.updateItem(heideIndex)

        }
      }

    },

    changePlay(current, type) {
      // console.log('current', current, 'type', type)

      if (!this.cachePlay) return
      if (type === 'toPre') {
        let len = this.paginatedData.length
        if (current !== len) {
          videoContexts[current + 1].pause();
        }
        videoContexts[current].play();
      } else if (type === 'toNext') {
        videoContexts[current - 1].pause()
        videoContexts[current].play();
      }
    },

    swiperChanged({detail: {current}}) {
      console.log('swiperChanged-current', current)

      let updateNum = ((this.currentPage - 1) * this.pageSize) - 2
      let currentNum = current + 1

      // 向下一个滑动
      if (current > this.showVideoIndex) {
        this.showVideoIndex = current;
        this.setVideoShow(current)
        this.setVideoContext()

        setTimeout(() => {
          this.changePlay(current, 'toNext')
        }, 50)

        if (currentNum === updateNum) {
          console.log('更新数据',)
          setTimeout(() => {
            this.getVideoList()
          }, 200)

        }
      }
      // 向上一个滑动
      else {
        this.showVideoIndex = current;
        this.changePlay(current, 'toPre')
      }

    },


    changeGrid(index) {
      // console.log('changeGrid', index)


      return
      // this.paginatedData[heideIndex].show = true

      if (index === 0) {
        this.videoContext.play()
      } else if (index === 1) {
        this.videoContext.pause()
      } else if (index === 2) {
        this.videoContext.stop()
      } else {
        // this.changePlay=!this.changePlay
      }


      /*else if (index === 2) {
        this.$refs.popup.open('bottom')

      }*/
      /*  uni.showToast({
          title: `点击第${index + 1}个宫格`,
          icon: 'none'
        })*/
    },

  }
}
</script>

<style scoped>
.currentPage-swiper {
  width: 750rpx;
  display: flex;
  flex-direction: column;
  flex: 1;
  /* #ifndef APP-NVUE */
  height: 100vh;
  /* #endif */
}

.content-wrapper {
  width: 750rpx;
  display: flex;
  flex-direction: column;
  flex: 1;
}

.swiper-item {
  transform: translateY(100px);
}

.video-box {
  position: relative;
  background-color: #000000;
}


/*---------------------------------------------*/
.video-text {
  position: absolute;
  width: 700rpx;
  bottom: 150rpx;
  z-index: 9999;
  margin-left: 50rpx;
}

.tips {
  width: 560rpx;
  font-size: 26rpx;
  color: #ffffff;
}

/*-------------------------------------------*/
.fixed-right {
  position: fixed;
  right: 30rpx;
  bottom: 200px;
  z-index: 100;

}

.fixed-right-text {
  font-size: 12px;
  color: #fff;
}

.grid-item-box {
  padding: 4px;
  display: flex;
  margin-bottom: 10px;
  /* #ifndef APP-NVUE */
  flex-direction: column;
  /* #endif */

}

.popup-container {
  width: 750rpx;
  height: 520px;
  background-color: #fff;
}

.picurl {
  width: 750rpx;
  flex: 1;
  position: absolute;
  top: 0;
  left: 0;
  z-index: 100;
}

.icon-play {

  width: 750rpx;
  flex: 1;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  z-index: 100;
  display: flex;
  justify-content: center;
  align-items: center;
}
</style>
